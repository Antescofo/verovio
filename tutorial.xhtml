---
layout: verovio
verovio-light: true
title: Verovio â€“ Features
active: tutorial
how-active: how-features
version-footer: true
tutorials:
    - id: "topic"
      name: "Introduction"
    - id: "topic00"
      name: "Getting started"
    - id: "topic01"
      name: "Managing options"
    - id: "topic02"
      name: "Handling events"
    - id: "topic03"
      name: "Highlighting content"
    - id: "topic04"
      name: "Accessing MEI elements"
    - id: "topic05"
      name: "Selecting readings"
    - id: "topic06"
      name: "Accessing MEI attributes"
    - id: "topic07"
      name: "Applying an XSLT"
    - id: "topic08"
      name: "Playing the MIDI output"
    - id: "topic09"
      name: "Interacting with editorial choices"
---

<div class="row">
    <div class="col-md-3 sidebar-offcanvas" id="sidebar" role="navigation">
        <div class="panel panel-default">
            {% include tutorial-sidebar.html %}
        </div>
    </div>
    
    <div class="col-md-9">
        <div class="panel-body">
            <div id="tutorial"></div>    
        </div>
    </div>
</div>

<script type="text/javascript">
//<![CDATA[

    var zoom = 40;
    var pageHeight = 2970;
    var pageWidth = 2100;
    var adjustPageHeight = 1;
    var border = 25;
    var spacingStaff = 4;
    var appXPathQuery = "";
    var choiceXPathQueries = ""
    var noLayout = 0;
    var vrvToolkit = new verovio.toolkit();

    function load_data(data, output_div) {
        options = JSON.stringify({
                    inputFormat: 'mei',
                    pageHeight: pageHeight,
                    pageWidth: pageWidth,
                    adjustPageHeight: adjustPageHeight,
                    border: border,
                    spacingStaff: spacingStaff,
                    appXPathQuery: appXPathQuery,
                    choiceXPathQueries: choiceXPathQueries,
                    noLayout: noLayout,
                    scale: zoom
                });
        
                console.log(options);
        var svg = vrvToolkit.renderData( data + "\n", options );
        output_div.html(svg);
    }
    
    function getParameterByName(name) {
        var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);
        return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
    }

    $( document ).ready(function() {
        
        var id = getParameterByName("id");
        if (!id) {
            id = "{{ page.tutorials[0].id }}";
        }
        var file = "" + id + ".html";
        // load the file    
        $( "#tutorial" ).load( file, function() {
              $(".toggle_code").click(function(){
                  $( "#" + $(this).attr("id") + "-xml" ).toggle();
                    $("span", this).toggleClass("glyphicon-eye-open glyphicon-eye-close");
              });
          
        });
        // activate the link menu
        $( "#link-" + id ).addClass( "active" );
        
    });
//]]>
</script>
